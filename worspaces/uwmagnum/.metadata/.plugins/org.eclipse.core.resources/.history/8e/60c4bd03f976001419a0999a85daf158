package za.co.alllife.magnum.uw.view.bloods.submission;

import java.util.Arrays;

import org.vaadin.easyuploads.UploadField;
import org.vaadin.easyuploads.UploadField.FieldType;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.FontAwesome;
import com.vaadin.server.Sizeable.Unit;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.UI;
import com.vaadin.ui.Upload;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.themes.ValoTheme;

public class BloodsSubmissionViewImpl extends CustomComponent implements BloodsSubmissionView {
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout controlContainer;

	@AutoGenerated
	private Button btnSubmit;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	@AutoGenerated
	private Button btnAddResult;

	@AutoGenerated
	private Button btnRemoveResult;
	
	private Button btnUploadResult;

	@AutoGenerated
	private Label lblNotice;

	@AutoGenerated
	private VerticalLayout resultListContainer;

	@AutoGenerated
	private HorizontalLayout hLayoutForms;

	private FormLayout frmLeft = new FormLayout ();
	private ComboBox inBloodsTest = new ComboBox ("Test");
	private ComboBox inFormat = new ComboBox ("Format");
	private FormLayout frmRight = new FormLayout ();
	private DateField inBookingDate = new DateField ("Booking Date");

	private static final long serialVersionUID = -9114630388195596629L;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public BloodsSubmissionViewImpl() {
		buildMainLayout ();
		setCompositionRoot (mainLayout);
		
		lblNotice.addStyleName (ValoTheme.LABEL_LIGHT);
		
		hLayoutForms.addComponents (frmLeft, frmRight);
		frmLeft.setWidth (100, Unit.PERCENTAGE);
		frmRight.setWidth (100, Unit.PERCENTAGE);
		
		buildForms ();
		
		btnSubmit.addStyleName (ValoTheme.BUTTON_FRIENDLY);
		btnRemoveResult.addStyleName (ValoTheme.BUTTON_DANGER);
		btnRemoveResult.setIcon (FontAwesome.TRASH_O);
		btnAddResult.setIcon (FontAwesome.PLUS_CIRCLE);
		btnUploadResult.setIcon(FontAwesome.FILE);
		
		lblNotice.setContentMode (ContentMode.HTML);
		lblNotice.setValue ("Result(s) will be ignored if no data is provided for the <b>Value</b> or <b>Comment</b> fields. <i>At least one of these fields need to be set.</i>");
		lblNotice.addStyleName (ValoTheme.LABEL_LIGHT);
	}
	
	private void buildForms () {
		frmLeft.addComponents (inBloodsTest, inFormat);
		frmRight.addComponents (inBookingDate);
		//TODO: Add import result component.
		Arrays.asList (inBloodsTest, inFormat, inBookingDate).forEach (component -> {
			component.setWidth (100, Unit.PERCENTAGE);
		});
	}

	@Override
	public void setBloodsResultListView (BloodsTestResultListView view) {
		Component comp = (Component) view;
		resultListContainer.addComponent (comp);
		comp.setSizeFull ();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// hLayoutForms
		hLayoutForms = new HorizontalLayout();
		hLayoutForms.setImmediate(false);
		hLayoutForms.setWidth("100.0%");
		hLayoutForms.setHeight("-1px");
		hLayoutForms.setMargin(false);
		mainLayout.addComponent(hLayoutForms);
		
		// resultListContainer
		resultListContainer = new VerticalLayout();
		resultListContainer.setImmediate(false);
		resultListContainer.setWidth("100.0%");
		resultListContainer.setHeight("100.0%");
		resultListContainer.setMargin(false);
		mainLayout.addComponent(resultListContainer);
		mainLayout.setExpandRatio(resultListContainer, 1.0f);
		
		// lblNotice
		lblNotice = new Label();
		lblNotice.setImmediate(false);
		lblNotice.setWidth("-1px");
		lblNotice.setHeight("-1px");
		lblNotice
				.setValue("Note: Result(s) will be ignored if no data is provided for the 'Value' or 'Comment' fields. At least one of these fields must be set.");
		mainLayout.addComponent(lblNotice);
		mainLayout.setComponentAlignment(lblNotice, new Alignment(20));
		
		// controlContainer
		controlContainer = buildControlContainer();
		mainLayout.addComponent(controlContainer);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildControlContainer() {
		// common part: create layout
		controlContainer = new HorizontalLayout();
		controlContainer.setImmediate(false);
		controlContainer.setWidth("99.91%");
		controlContainer.setHeight("-1px");
		controlContainer.setMargin(false);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		controlContainer.addComponent(horizontalLayout_1);
		
		// btnSubmit
		btnSubmit = new Button();
		btnSubmit.setCaption("Submit");
		btnSubmit.setImmediate(true);
		btnSubmit.setWidth("-1px");
		btnSubmit.setHeight("-1px");
		controlContainer.addComponent(btnSubmit);
		controlContainer.setComponentAlignment(btnSubmit, new Alignment(34));
		
		
		return controlContainer;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);
		
		// btnRemoveResult
		btnRemoveResult = new Button();
		btnRemoveResult.setCaption("Remove Result");
		btnRemoveResult.setImmediate(true);
		btnRemoveResult.setWidth("-1px");
		btnRemoveResult.setHeight("-1px");
		horizontalLayout_1.addComponent(btnRemoveResult);
		
		// btnAddResult
		btnAddResult = new Button();
		btnAddResult.setCaption("Add Result");
		btnAddResult.setImmediate(true);
		btnAddResult.setWidth("-1px");
		btnAddResult.setHeight("-1px");
		horizontalLayout_1.addComponent(btnAddResult);
		
		

		//btnUploadResult
		btnUploadResult = new Button();
		btnUploadResult.setCaption("Upload Results");
		btnUploadResult.setImmediate(true);
		btnUploadResult.setWidth("-1px");
		btnUploadResult.setHeight("-1px");
		horizontalLayout_1.addComponent(btnUploadResult);
	
		return horizontalLayout_1;
	}

	@Override
	public void setUploadFile() {
		btnUploadResult.addClickListener(new Button.ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				
				Window window = new Window ("upload BloodTest RESULTS");
						window.setResizable (false);
						window.setWidth (850, Unit.PIXELS);
						window.setHeight (800, Unit.PIXELS);
						window.setModal (true);
						VerticalLayout uploadFile = new VerticalLayout ();
						uploadFile.setMargin(true);
						
						window.setContent ( uploadFile);
						UI.getCurrent ().addWindow (window);
						window.center ();
				
				final Upload uploadField = new Upload();
						// final UploadField uploadField = new UploadField();
						uploadField.setWidth("45px");
						//uploadField.setFieldType(FieldType.FILE);
				        uploadField.setImmediate(false);
				   
				        uploadField.setSizeFull();
				        //uploadField.setCaption(""+uploadField.getFieldType()); 
			        
		        uploadField.setVisible(true);
		        uploadFile.addComponent(uploadField);
		  
				
			}
		});
		
	}
}